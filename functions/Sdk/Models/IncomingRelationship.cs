// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AdtExplorer.Functions.Sdk.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An incoming relationship.
    /// </summary>
    public partial class IncomingRelationship
    {
        /// <summary>
        /// Initializes a new instance of the IncomingRelationship class.
        /// </summary>
        public IncomingRelationship()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IncomingRelationship class.
        /// </summary>
        /// <param name="relationshipId">A user-provided string representing
        /// the id of this relationship, unique in the context of the source
        /// digital twin, i.e. sourceId + relationshipId is unique in the
        /// context of the service.</param>
        /// <param name="sourceId">The id of the source digital twin.</param>
        /// <param name="relationshipName">The name of the
        /// relationship.</param>
        /// <param name="relationshipLink">Link to the relationship, to be used
        /// for deletion.</param>
        public IncomingRelationship(string relationshipId = default(string), string sourceId = default(string), string relationshipName = default(string), string relationshipLink = default(string))
        {
            RelationshipId = relationshipId;
            SourceId = sourceId;
            RelationshipName = relationshipName;
            RelationshipLink = relationshipLink;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a user-provided string representing the id of this
        /// relationship, unique in the context of the source digital twin,
        /// i.e. sourceId + relationshipId is unique in the context of the
        /// service.
        /// </summary>
        [JsonProperty(PropertyName = "$relationshipId")]
        public string RelationshipId { get; set; }

        /// <summary>
        /// Gets or sets the id of the source digital twin.
        /// </summary>
        [JsonProperty(PropertyName = "$sourceId")]
        public string SourceId { get; set; }

        /// <summary>
        /// Gets or sets the name of the relationship.
        /// </summary>
        [JsonProperty(PropertyName = "$relationshipName")]
        public string RelationshipName { get; set; }

        /// <summary>
        /// Gets or sets link to the relationship, to be used for deletion.
        /// </summary>
        [JsonProperty(PropertyName = "$relationshipLink")]
        public string RelationshipLink { get; set; }

    }
}
